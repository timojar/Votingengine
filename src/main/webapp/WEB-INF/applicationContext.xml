<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	 http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="fi.softala.votingEngine" />

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="index" />
	
	<!-- location of static content (images, js and css files) -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	
	
	
	     <!-- Production implementation of the JavaMailSender interface, supporting
                both JavaMail MimeMessages and Spring SimpleMailMessages -->
 <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
                <property name="host" value="smtp.gmail.com" />
                <property name="port" value="587" />
                <property name="username" value="tjarmala05@gmail.com" />
                <property name="password" value="S@lasana123" />

                <!-- The name of the property, following JavaBean naming conventions -->
                <property name="javaMailProperties">
                        <props>

                                <prop key="mail.smtp.port">587</prop>
                                <prop key="mail.smtp.host">smtp.gmail.com</prop>
                                <prop key="mail.transport.protocol">smtp</prop>
                                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
                                <prop key="mail.smtp.auth">true</prop>
                                <prop key="mail.smtp.starttls.enable">true</prop>
                                <prop key="mail.debug">true</prop>

                        </props>
                </property>
        </bean>

      
	


	
	
	
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="ISO-8859-1"/>
	</bean>
	
	
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>

	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>
	
	
	<context:property-placeholder location="classpath*:/db_connection.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<property name="dataSource" ref="dataSource"/>
	</bean>
	
	
	<!-- SPRING SECURITY -->

	<sec:http auto-config="true" use-expressions="true">
	
		<sec:intercept-url pattern="/innot/lisaaopiskelija*" access="isAuthenticated()" />
		<sec:intercept-url pattern="/innot/lisaaopiskelija**" access="hasRole('ROLE_ADMIN')" />
		
		
		<sec:intercept-url pattern="/innot/hallitse**" access="hasRole('ROLE_ADMIN')"  /> 
		<sec:intercept-url pattern="/innot/hallitse*" access="isAuthenticated()" />
		
		<sec:intercept-url pattern="/innot/innovaatiot**" access="hasAnyRole('ROLE_ADMIN, ROLE_USER, OWNER_USER')" /> 
		<sec:intercept-url pattern="/innot/innovaatiot*" access="isAuthenticated()" />
		
		<sec:intercept-url pattern="/aanet/aanestys**" access="hasAnyRole('ROLE_ADMIN, ROLE_USER, OWNER_USER')" /> 
		<sec:intercept-url pattern="/aanet/aanestys*" access="isAuthenticated()" />
		
		<sec:intercept-url pattern="/aanet/tulokset**" access="hasAnyRole('VOTED_USER, OWNER_USER')"  /> 
		<sec:intercept-url pattern="/aanet/tulokset*" access="isAuthenticated()" />
		<sec:intercept-url pattern="/aanet/log**" access="hasAnyRole('ROLE_ADMIN, ROLE_USER, OWNER_USER, VOTED_USER')" /> 
		<sec:intercept-url pattern="/aanet/log*" access="isAuthenticated()" />
		
		
		
		<sec:intercept-url pattern="/*" access="permitAll" />
		<sec:form-login
			login-page="/loginpage"
			default-target-url="/innot/innovaatiot"
			authentication-failure-url="/loginfail" />
			
		<sec:logout logout-success-url="/logout" />
		
	</sec:http>
	
	<bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />


	
	<!--  
	 <sec:authentication-manager>
			<sec:authentication-provider>
				<sec:user-service>
					<sec:user name="user" password="userpassu" authorities="ROLE_USER" />
					<sec:user name="admin" password="adminpassu" authorities="ROLE_ADMIN" />
				</sec:user-service>
			</sec:authentication-provider>
		</sec:authentication-manager>
		
	-->
	
	
<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:password-encoder ref="encoder" />
			<sec:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email, opiskelijanumeroKryptattuna, enabled from opiskelija where email=? and enabled = 1"
				authorities-by-username-query="select email, rooli from opiskelija  JOIN valtuus  ON opiskelija.valtuusId=valtuus.id where email=?" />
		</sec:authentication-provider>
	</sec:authentication-manager>





	<sec:global-method-security pre-post-annotations="enabled" />
	
	
	
	
	

	
	


</beans>
